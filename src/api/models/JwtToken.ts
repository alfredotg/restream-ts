/* tslint:disable */
/* eslint-disable */
/**
 * restream
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RpcPermissions } from './RpcPermissions';
import {
    RpcPermissionsFromJSON,
    RpcPermissionsFromJSONTyped,
    RpcPermissionsToJSON,
} from './RpcPermissions';
import type { LimitByKey } from './LimitByKey';
import {
    LimitByKeyFromJSON,
    LimitByKeyFromJSONTyped,
    LimitByKeyToJSON,
} from './LimitByKey';
import type { PubPermissions } from './PubPermissions';
import {
    PubPermissionsFromJSON,
    PubPermissionsFromJSONTyped,
    PubPermissionsToJSON,
} from './PubPermissions';
import type { SubPermissions } from './SubPermissions';
import {
    SubPermissionsFromJSON,
    SubPermissionsFromJSONTyped,
    SubPermissionsToJSON,
} from './SubPermissions';

/**
 * 
 * @export
 * @interface JwtToken
 */
export interface JwtToken {
    /**
     * 
     * @type {Array<LimitByKey>}
     * @memberof JwtToken
     */
    connLimits?: Array<LimitByKey>;
    /**
     * 
     * @type {PubPermissions}
     * @memberof JwtToken
     */
    publish?: PubPermissions;
    /**
     * 
     * @type {RpcPermissions}
     * @memberof JwtToken
     */
    rpc?: RpcPermissions;
    /**
     * 
     * @type {SubPermissions}
     * @memberof JwtToken
     */
    subscribe?: SubPermissions;
    /**
     * 
     * @type {string}
     * @memberof JwtToken
     */
    sub: string;
    /**
     * 
     * @type {number}
     * @memberof JwtToken
     */
    exp: number;
}

/**
 * Check if a given object implements the JwtToken interface.
 */
export function instanceOfJwtToken(value: object): value is JwtToken {
    if (!('sub' in value) || value['sub'] === undefined) return false;
    if (!('exp' in value) || value['exp'] === undefined) return false;
    return true;
}

export function JwtTokenFromJSON(json: any): JwtToken {
    return JwtTokenFromJSONTyped(json, false);
}

export function JwtTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): JwtToken {
    if (json == null) {
        return json;
    }
    return {
        
        'connLimits': json['conn_limits'] == null ? undefined : ((json['conn_limits'] as Array<any>).map(LimitByKeyFromJSON)),
        'publish': json['publish'] == null ? undefined : PubPermissionsFromJSON(json['publish']),
        'rpc': json['rpc'] == null ? undefined : RpcPermissionsFromJSON(json['rpc']),
        'subscribe': json['subscribe'] == null ? undefined : SubPermissionsFromJSON(json['subscribe']),
        'sub': json['sub'],
        'exp': json['exp'],
    };
}

export function JwtTokenToJSON(value?: JwtToken | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'conn_limits': value['connLimits'] == null ? undefined : ((value['connLimits'] as Array<any>).map(LimitByKeyToJSON)),
        'publish': PubPermissionsToJSON(value['publish']),
        'rpc': RpcPermissionsToJSON(value['rpc']),
        'subscribe': SubPermissionsToJSON(value['subscribe']),
        'sub': value['sub'],
        'exp': value['exp'],
    };
}

